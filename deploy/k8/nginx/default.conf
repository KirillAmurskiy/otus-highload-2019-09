server {                                                     
        #root /www;

	listen 80;                            
        
        location / {
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            
            proxy_pass http://frontend:3000;
        }

        location ~ /api/(?<service_name>([0-9a-z]+)) {
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;   
            proxy_set_header   X-Forwarded-Prefix $prefix;
            
            proxy_pass http://socialnetwork;
            
            set $prefix "";
            
            if ($service_name = "backend") {
                rewrite /api/([0-9a-z]+)(.*) $2;
                set $prefix "/api/backend";
                proxy_pass http://socialnetwork;
                # Without break swagger page can't be found. I couldn't figure out why. It's about "if" statement in nginx.
                break;
            }
            
            if ($service_name ~ (users|auth)) {
                proxy_pass http://socialnetwork;
                # Without break swagger page can't be found. I couldn't figure out why. It's about "if" statement in nginx.
                break;
            }
        }   
                  
        # You may need this to prevent return 404 recursion. 
        location = /404.html {                               
                internal;                                    
        }                                                    
}
                                             

